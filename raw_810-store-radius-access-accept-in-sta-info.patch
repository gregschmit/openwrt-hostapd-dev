From 858106dff3e94e8ba713f381e89aec58d64cbac9 Mon Sep 17 00:00:00 2001
From: "Gregory N. Schmit" <schmitgreg@gmail.com>
Date: Mon, 20 Oct 2025 14:41:19 -0500
Subject: [PATCH] hostapd: Store RADIUS Access-Accept in STA Info

Store RADIUS Access-Accept message in the `sta_info` struct so it can
be retrieved later if needed, e.g. to inspect RADIUS attributes. Also,
add two functions to the RADIUS library to enable iterating over the
attributes in a RADIUS message.

This change is required to support the ability of openwrt's ubus
component to provide RADIUS attributes on the `authorized` event and
the `get_clients` call. This change is motivated by a dynamic tunnel
initiator program I am working on, which needs to know the tunnel
parameters provided by the RADIUS server, however it could be useful
for other purposes as well.
---
 src/ap/ieee802_11_auth.c |  9 +++++++++
 src/ap/ieee802_1x.c      |  6 ++++++
 src/ap/sta_info.c        |  2 ++
 src/ap/sta_info.h        |  2 ++
 src/radius/radius.c      | 11 +++++++++++
 src/radius/radius.h      |  3 +++
 6 files changed, 33 insertions(+)

diff --git a/src/ap/ieee802_11_auth.c b/src/ap/ieee802_11_auth.c
index 913a99597..e2de1f52c 100644
--- a/src/ap/ieee802_11_auth.c
+++ b/src/ap/ieee802_11_auth.c
@@ -610,6 +610,15 @@ hostapd_acl_recv_radius(struct radius_msg *msg, struct radius_msg *req,
 				   "No STA/SM entry found for the RADIUS PSK response");
 			goto done;
 		}
+
+		if (success) {
+			/* Store a copy of the message for later retrieval. */
+			radius_msg_free(sta->radius_accept);
+			sta->radius_accept = radius_msg_parse(
+				wpabuf_head(radius_msg_get_buf(msg)),
+				wpabuf_len(radius_msg_get_buf(msg))
+			);
+		}
 #ifdef NEED_AP_MLME
 		if (success &&
 		    (ieee802_11_set_radius_info(hapd, sta, cache->accepted,
diff --git a/src/ap/ieee802_1x.c b/src/ap/ieee802_1x.c
index dda0efac5..a040a2a12 100644
--- a/src/ap/ieee802_1x.c
+++ b/src/ap/ieee802_1x.c
@@ -2100,6 +2100,12 @@ ieee802_1x_receive_auth(struct radius_msg *msg, struct radius_msg *req,

 	switch (hdr->code) {
 	case RADIUS_CODE_ACCESS_ACCEPT:
+		/* Store a copy of the message for later retrieval. */
+		radius_msg_free(sta->radius_accept);
+		sta->radius_accept = radius_msg_parse(
+			wpabuf_head(radius_msg_get_buf(msg)),
+			wpabuf_len(radius_msg_get_buf(msg))
+		);
 #ifndef CONFIG_NO_VLAN
 		if (hapd->conf->ssid.dynamic_vlan != DYNAMIC_VLAN_DISABLED &&
 		    ieee802_1x_update_vlan(msg, hapd, sta) < 0)
diff --git a/src/ap/sta_info.c b/src/ap/sta_info.c
index e3218812f..c65b07f17 100644
--- a/src/ap/sta_info.c
+++ b/src/ap/sta_info.c
@@ -421,6 +421,8 @@ void ap_free_sta(struct hostapd_data *hapd, struct sta_info *sta)
 	hostapd_free_psk_list(sta->psk);
 	os_free(sta->identity);
 	os_free(sta->radius_cui);
+	radius_msg_free(sta->radius_accept);
+	sta->radius_accept = NULL;
 	os_free(sta->t_c_url);
 	wpabuf_free(sta->hs20_deauth_req);
 	os_free(sta->hs20_session_info_url);
diff --git a/src/ap/sta_info.h b/src/ap/sta_info.h
index f08cbcfae..6fb2f35a9 100644
--- a/src/ap/sta_info.h
+++ b/src/ap/sta_info.h
@@ -17,6 +17,7 @@
 #include "common/sae.h"
 #include "crypto/sha384.h"
 #include "pasn/pasn_common.h"
+#include "radius/radius.h"
 #include "hostapd.h"

 /* STA flags */
@@ -187,6 +188,7 @@ struct sta_info {

 	char *identity; /* User-Name from RADIUS */
 	char *radius_cui; /* Chargeable-User-Identity from RADIUS */
+	struct radius_msg *radius_accept; /* RADIUS Access-Accept Message */

 	struct ieee80211_ht_capabilities *ht_capabilities;
 	struct ieee80211_vht_capabilities *vht_capabilities;
diff --git a/src/radius/radius.c b/src/radius/radius.c
index b72e5e952..595bbddc9 100644
--- a/src/radius/radius.c
+++ b/src/radius/radius.c
@@ -422,6 +422,17 @@ void radius_msg_dump(struct radius_msg *msg)
 	}
 }

+size_t radius_msg_get_attr_used(struct radius_msg *msg) {
+	return msg->attr_used;
+}
+
+struct radius_attr_hdr *
+radius_msg_get_attr_hdr(struct radius_msg *msg, size_t idx) {
+	if (idx >= msg->attr_used) {
+		return NULL;
+	}
+	return radius_get_attr_hdr(msg, idx);
+}

 u8 * radius_msg_add_msg_auth(struct radius_msg *msg)
 {
diff --git a/src/radius/radius.h b/src/radius/radius.h
index 25a4744c2..1d8a739e6 100644
--- a/src/radius/radius.h
+++ b/src/radius/radius.h
@@ -271,6 +271,9 @@ struct wpabuf * radius_msg_get_buf(struct radius_msg *msg);
 struct radius_msg * radius_msg_new(u8 code, u8 identifier);
 void radius_msg_free(struct radius_msg *msg);
 void radius_msg_dump(struct radius_msg *msg);
+size_t radius_msg_get_attr_used(struct radius_msg *msg);
+struct radius_attr_hdr *
+radius_msg_get_attr_hdr(struct radius_msg *msg, size_t idx);
 u8 * radius_msg_add_msg_auth(struct radius_msg *msg);
 int radius_msg_finish(struct radius_msg *msg, const u8 *secret,
 		      size_t secret_len);
--
2.47.1
